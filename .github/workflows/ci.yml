name: Compiler et stocker les artefacts de production
on:
  push:
    branches:
      - main

jobs:
  build1:
    runs-on: ubuntu-latest
    steps:
      - name: Cloner le référentiel de production
        uses: actions/checkout@v2
        with:
          repository: YNOVM2CICDAyoubBruno/cd_ci_tp9_Ayoub_Bruno
          ref: main

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build
        run: go build -v ./...

      - name: Charger les artefacts
        uses: actions/upload-artifacts@v2
        with:
          name: production-artifacts
          path: .
  build2:
    runs-on: ubuntu-latest
    needs: build1
    steps:
      - name: Cloner le référentiel de production
        uses: actions/checkout@v2
        with:
          repository: YNOVM2CICDAyoubBruno/cd_ci_tp8_3_Ayoub_Bruno
          ref: main

      - name: Démarrage docker compose
        run: docker compose up -d

      - name: Init BDD
        run: sleep 20 && docker compose exec -T db1 mysql -pexample -u root < InitDB.sql

      - name: Afficher la page web associée
        run: docker compose exec nginx curl localhost

      - name: Stopper les conteneurs
        run: docker compose down

      - name: Charger les artefacts
        uses: actions/upload-artifacts@v2
        with:
          name: production-artifacts
          path: prod2


  deploy:
    runs-on: ubuntu-latest
    needs: [build1, build2]
    steps:
      - name: Cloner le référentiel de production
        uses: actions/checkout@v2
        with:
          repository: YNOVM2CICDAyoubBruno/production
          ref: main

      - name: Télécharger les artefacts
        uses: actions/download-artifacts@v2
        with:
          name: production-artifacts
